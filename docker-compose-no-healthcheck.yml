version: '3.8'

services:
  # Databases
  items-db:
    image: postgres:15
    environment:
      POSTGRES_DB: items_db
      POSTGRES_USER: items_user
      POSTGRES_PASSWORD: items_pass
    volumes:
      - items_db_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  orders-db:
    image: postgres:15
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: orders_user
      POSTGRES_PASSWORD: orders_pass
    volumes:
      - orders_db_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  users-db:
    image: postgres:15
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: users_user
      POSTGRES_PASSWORD: users_pass
    volumes:
      - users_db_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  # Microservices
  items-service:
    build: ./items-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - items-db
    networks:
      - warehouse-network
    restart: on-failure

  orders-service:
    build: ./orders-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - orders-db
      - items-service
    networks:
      - warehouse-network
    restart: on-failure

  users-service:
    build: ./users-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - users-db
    networks:
      - warehouse-network
    restart: on-failure

  auth-service:
    build: ./auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - users-service
    networks:
      - warehouse-network
    restart: on-failure

  # Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - '8080:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - items-service
      - orders-service
      - users-service
      - auth-service
    networks:
      - warehouse-network

volumes:
  items_db_data:
  orders_db_data:
  users_db_data:

networks:
  warehouse-network:
    driver: bridge
