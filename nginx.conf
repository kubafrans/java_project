events {
    worker_connections 1024;
}

http {
    upstream items-service {
        server items-service:8081;
    }
    
    upstream orders-service {
        server orders-service:8082;
    }
    
    upstream users-service {
        server users-service:8083;
    }
    
    upstream auth-service {
        server auth-service:8084;
    }
    
    upstream swagger-gateway {
        server swagger-gateway:8085;
    }

    server {
        listen 80;
        
        # Root location - redirect to Swagger UI
        location = / {
            return 302 /swagger-ui/index.html;
        }
        
        # Swagger Gateway (centralized documentation)
        location ~ ^/(swagger-ui|v3/api-docs|webjars)(.*)$ {
            proxy_pass http://swagger-gateway/$1$2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Items Service
        location ~ ^/api/items(/.*)?$ {
            proxy_pass http://items-service$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /items;
        }
        
        location ~ ^/items/(.*)$ {
            proxy_pass http://items-service/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Orders Service
        location ~ ^/api/orders(/.*)?$ {
            proxy_pass http://orders-service$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /orders;
        }
        
        location ~ ^/orders/(.*)$ {
            proxy_pass http://orders-service/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Users Service
        location ~ ^/api/users(/.*)?$ {
            proxy_pass http://users-service$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /users;
        }
        
        location ~ ^/users/(.*)$ {
            proxy_pass http://users-service/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Auth Service
        location ~ ^/api/auth(/.*)?$ {
            proxy_pass http://auth-service$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /auth;
        }
        
        location ~ ^/auth/(.*)$ {
            proxy_pass http://auth-service/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            return 200 '{"status":"ok","nginx":"running"}';
            add_header Content-Type application/json;
        }
    }
}
